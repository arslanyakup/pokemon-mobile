{"version":3,"sources":["index.native.js"],"names":["ENABLE_SCREENS","getViewManagerConfigCompat","name","UIManager","getViewManagerConfig","enableScreens","shouldEnableScreens","console","error","useScreens","shouldUseScreens","warn","screensEnabled","NativeScreenValue","NativeScreenContainerValue","NativeScreenStack","NativeScreenStackHeaderConfig","NativeScreenStackHeaderSubview","AnimatedNativeScreen","ScreensNativeModules","NativeScreen","NativeScreenContainer","Screen","React","Component","ref","_ref","props","onComponentRef","setNativeProps","render","active","setRef","Animated","createAnimatedComponent","version","minor","style","children","rest","StyleSheet","absoluteFill","ScreenContainer","styles","create","headerSubview","position","top","right","flexDirection","alignItems","justifyContent","ScreenStackHeaderBackButtonImage","ScreenStackHeaderRightView","ScreenStackHeaderLeftView","ScreenStackHeaderCenterView","module","exports","ScreenStack","ScreenStackHeaderConfig","ScreenStackHeaderSubview"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Animated,\n  Image,\n  requireNativeComponent,\n  StyleSheet,\n  UIManager,\n  View,\n} from 'react-native';\nimport { version } from 'react-native/Libraries/Core/ReactNativeVersion';\n\nlet ENABLE_SCREENS = false;\n\n// UIManager[`${moduleName}`] is deprecated in RN 0.58 and `getViewManagerConfig` is added.\n// We can remove this when we drop support for RN < 0.58.\nconst getViewManagerConfigCompat = (name) =>\n  typeof UIManager.getViewManagerConfig !== 'undefined'\n    ? UIManager.getViewManagerConfig(name)\n    : UIManager[name];\n\nfunction enableScreens(shouldEnableScreens = true) {\n  ENABLE_SCREENS = shouldEnableScreens;\n  if (ENABLE_SCREENS && !getViewManagerConfigCompat('RNSScreen')) {\n    console.error(\n      `Screen native module hasn't been linked. Please check the react-native-screens README for more details`\n    );\n  }\n}\n\n// we should remove this at some point\nfunction useScreens(shouldUseScreens = true) {\n  console.warn('Method `useScreens` is deprecated, please use `enableScreens`');\n  enableScreens(shouldUseScreens);\n}\n\nfunction screensEnabled() {\n  return ENABLE_SCREENS;\n}\n\n// We initialize these lazily so that importing the module doesn't throw error when not linked\n// This is necessary coz libraries such as React Navigation import the library where it may not be enabled\nlet NativeScreenValue;\nlet NativeScreenContainerValue;\nlet NativeScreenStack;\nlet NativeScreenStackHeaderConfig;\nlet NativeScreenStackHeaderSubview;\nlet AnimatedNativeScreen;\n\nconst ScreensNativeModules = {\n  get NativeScreen() {\n    NativeScreenValue =\n      NativeScreenValue || requireNativeComponent('RNSScreen', null);\n    return NativeScreenValue;\n  },\n\n  get NativeScreenContainer() {\n    NativeScreenContainerValue =\n      NativeScreenContainerValue ||\n      requireNativeComponent('RNSScreenContainer', null);\n    return NativeScreenContainerValue;\n  },\n\n  get NativeScreenStack() {\n    NativeScreenStack =\n      NativeScreenStack || requireNativeComponent('RNSScreenStack', null);\n    return NativeScreenStack;\n  },\n\n  get NativeScreenStackHeaderConfig() {\n    NativeScreenStackHeaderConfig =\n      NativeScreenStackHeaderConfig ||\n      requireNativeComponent('RNSScreenStackHeaderConfig', null);\n    return NativeScreenStackHeaderConfig;\n  },\n\n  get NativeScreenStackHeaderSubview() {\n    NativeScreenStackHeaderSubview =\n      NativeScreenStackHeaderSubview ||\n      requireNativeComponent('RNSScreenStackHeaderSubview', null);\n    return NativeScreenStackHeaderSubview;\n  },\n};\n\nclass Screen extends React.Component {\n  setNativeProps(props) {\n    this._ref.setNativeProps(props);\n  }\n\n  setRef = (ref) => {\n    this._ref = ref;\n    this.props.onComponentRef && this.props.onComponentRef(ref);\n  };\n\n  render() {\n    if (!ENABLE_SCREENS) {\n      // Filter out active prop in this case because it is unused and\n      // can cause problems depending on react-native version:\n      // https://github.com/react-navigation/react-navigation/issues/4886\n\n      /* eslint-disable no-unused-vars */\n      const { active, onComponentRef, ...props } = this.props;\n\n      return <Animated.View {...props} ref={this.setRef} />;\n    } else {\n      AnimatedNativeScreen =\n        AnimatedNativeScreen ||\n        Animated.createAnimatedComponent(ScreensNativeModules.NativeScreen);\n\n      // When using RN from master version is 0.0.0\n      if (version.minor >= 57 || version.minor === 0) {\n        return <AnimatedNativeScreen {...this.props} ref={this.setRef} />;\n      } else {\n        // On RN version below 0.57 we need to wrap screen's children with an\n        // additional View because of a bug fixed in react-native/pull/20658 which\n        // was preventing a view from having both styles and some other props being\n        // \"animated\" (using Animated native driver)\n        const { style, children, ...rest } = this.props;\n        return (\n          <AnimatedNativeScreen\n            {...rest}\n            ref={this.setRef}\n            style={StyleSheet.absoluteFill}>\n            <Animated.View style={style}>{children}</Animated.View>\n          </AnimatedNativeScreen>\n        );\n      }\n    }\n  }\n}\n\nclass ScreenContainer extends React.Component {\n  render() {\n    if (!ENABLE_SCREENS) {\n      return <View {...this.props} />;\n    } else {\n      return <ScreensNativeModules.NativeScreenContainer {...this.props} />;\n    }\n  }\n}\n\nconst styles = StyleSheet.create({\n  headerSubview: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nconst ScreenStackHeaderBackButtonImage = (props) => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    type=\"back\"\n    style={styles.headerSubview}>\n    <Image resizeMode=\"center\" fadeDuration={0} {...props} />\n  </ScreensNativeModules.NativeScreenStackHeaderSubview>\n);\n\nconst ScreenStackHeaderRightView = (props) => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    {...props}\n    type=\"right\"\n    style={styles.headerSubview}\n  />\n);\n\nconst ScreenStackHeaderLeftView = (props) => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    {...props}\n    type=\"left\"\n    style={styles.headerSubview}\n  />\n);\n\nconst ScreenStackHeaderCenterView = (props) => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    {...props}\n    type=\"center\"\n    style={styles.headerSubview}\n  />\n);\n\nmodule.exports = {\n  ScreenContainer,\n  Screen,\n  get NativeScreen() {\n    return ScreensNativeModules.NativeScreen;\n  },\n\n  get NativeScreenContainer() {\n    return ScreensNativeModules.NativeScreenContainer;\n  },\n\n  get ScreenStack() {\n    return ScreensNativeModules.NativeScreenStack;\n  },\n  get ScreenStackHeaderConfig() {\n    return ScreensNativeModules.NativeScreenStackHeaderConfig;\n  },\n  get ScreenStackHeaderSubview() {\n    return ScreensNativeModules.NativeScreenStackHeaderSubview;\n  },\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderRightView,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderCenterView,\n\n  enableScreens,\n  useScreens,\n  screensEnabled,\n};\n"]}